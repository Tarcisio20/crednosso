generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model accountBank {
  id                Int      @id @default(autoincrement())
  name              String
  bank_branch       String   @default("")
  account           String   @default("")
  status            Boolean  @default(true)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @default(now())
  account_digit     String   @default("")
  bank_branch_digit String   @default("")
  hash              String?
  type              String  @default("mateus")
}

model atm {
  id           Int      @id @default(autoincrement())
  id_system    Int      @unique(map: "Atm_id_system_key")
  name         String   @unique(map: "Atm_name_key")
  short_name   String   @unique(map: "Atm_short_name_key")
  id_treasury  Int
  cassete_A    Int
  cassete_B    Int
  cassete_C    Int
  cassete_D    Int
  status       Boolean  @default(true)
  number_store Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())
  treasury     treasury @relation(fields: [id_treasury], references: [id], map: "Atm_id_treasury_fkey")
  supply       supply[]

  @@index([id_treasury], map: "Atm_id_treasury_fkey")
}

model contact {
  id          Int      @id @default(autoincrement())
  id_treasury Int
  name        String
  email       String
  phone       String
  status      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  treasury    treasury @relation(fields: [id_treasury], references: [id_system], map: "Contact_id_treasury_fkey")

  @@index([id_treasury], map: "Contact_id_treasury_fkey")
}

model moneySplit {
  id                                               Int      @id @default(autoincrement())
  id_treasury_origin                               Int
  id_treasury_rating                               Int
  value                                            Int
  status                                           Boolean  @default(true)
  createdAt                                        DateTime @default(now())
  updatedAt                                        DateTime @default(now())
  id_order                                         Int
  order                                            order    @relation(fields: [id_order], references: [id], map: "MoneySplit_id_order_fkey")
  treasury_moneysplit_id_treasury_originTotreasury treasury @relation("moneysplit_id_treasury_originTotreasury", fields: [id_treasury_origin], references: [id], map: "MoneySplit_id_treasury_origin_fkey")
  treasury_moneysplit_id_treasury_ratingTotreasury treasury @relation("moneysplit_id_treasury_ratingTotreasury", fields: [id_treasury_rating], references: [id], map: "MoneySplit_id_treasury_rating_fkey")

  @@index([id_order], map: "MoneySplit_id_order_fkey")
  @@index([id_treasury_origin], map: "MoneySplit_id_treasury_origin_fkey")
  @@index([id_treasury_rating], map: "MoneySplit_id_treasury_rating_fkey")
}

model moneySplitRefund {
  id                 Int      @id @default(autoincrement())
  id_order           Int
  id_treasury_origin Int
  value              Int
  status             Boolean  @default(true)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @default(now())
  order              order    @relation(fields: [id_order], references: [id], map: "MOneySplitRefund_id_order_fkey")
  treasury           treasury @relation(fields: [id_treasury_origin], references: [id], map: "MOneySplitRefund_id_treasury_origin_fkey")

  @@index([id_order], map: "MOneySplitRefund_id_order_fkey")
  @@index([id_treasury_origin], map: "MOneySplitRefund_id_treasury_origin_fkey")
}

model operationalError {
  id          Int      @id @default(autoincrement())
  id_treasury Int
  num_os      Int
  description String
  status      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  treasury    treasury @relation(fields: [id_treasury], references: [id], map: "OperationalError_id_treasury_fkey")

  @@index([id_treasury], map: "OperationalError_id_treasury_fkey")
}

model operatorCard {
  id          Int      @id @default(autoincrement())
  id_treasury Int
  name        String   @unique(map: "OperatorCard_name_key")
  number_card String   @unique(map: "OperatorCard_number_card_key")
  status      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  inUse       Boolean  @default(false)
  treasury    treasury @relation(fields: [id_treasury], references: [id], map: "OperatorCard_id_treasury_fkey")

  @@index([id_treasury], map: "OperatorCard_id_treasury_fkey")
}

model order {
  id                                          Int                @id @default(autoincrement())
  id_type_operation                           Int
  id_treasury_origin                          Int
  id_treasury_destin                          Int
  date_order                                  DateTime
  id_type_order                               Int
  requested_value_A                           Int
  requested_value_B                           Int
  requested_value_C                           Int
  requested_value_D                           Int
  composition_change                          Boolean            @default(false)
  confirmed_value_A                           Int                @default(0)
  confirmed_value_B                           Int                @default(0)
  confirmed_value_C                           Int                @default(0)
  confirmed_value_D                           Int                @default(0)
  status_order                                Int
  createdAt                                   DateTime           @default(now())
  updatedAt                                   DateTime           @default(now())
  observation                                 String             @default("")
  moneysplit                                  moneySplit[]
  moneysplitrefund                            moneySplitRefund[]
  treasury_order_id_treasury_destinTotreasury treasury           @relation("order_id_treasury_destinTotreasury", fields: [id_treasury_destin], references: [id_system], map: "Order_id_treasury_destin_fkey")
  treasury_order_id_treasury_originTotreasury treasury           @relation("order_id_treasury_originTotreasury", fields: [id_treasury_origin], references: [id_system], map: "Order_id_treasury_origin_fkey")
  typeoperation                               typeOperation      @relation(fields: [id_type_operation], references: [id], map: "Order_id_type_operation_fkey")
  typeorder                                   typeOrder          @relation(fields: [id_type_order], references: [id], map: "Order_id_type_order_fkey")
  statusorder                                 statusOrder        @relation(fields: [status_order], references: [id], map: "Order_status_order_fkey")
  supply                                      supply[]

  @@index([id_treasury_destin], map: "Order_id_treasury_destin_fkey")
  @@index([id_treasury_origin], map: "Order_id_treasury_origin_fkey")
  @@index([id_type_operation], map: "Order_id_type_operation_fkey")
  @@index([id_type_order], map: "Order_id_type_order_fkey")
  @@index([status_order], map: "Order_status_order_fkey")
}

model statusOrder {
  id        Int      @id @default(autoincrement())
  name      String   @unique(map: "StatusOrder_name_key")
  status    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  order     order[]
}

model supply {
  id             Int      @id @default(autoincrement())
  id_atm         Int
  cassete_A      Int
  cassete_B      Int
  cassete_C      Int
  cassete_D      Int
  total_exchange Boolean  @default(false)
  status         Boolean  @default(true)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @default(now())
  date           DateTime @default(now())
  id_treasury    Int
  id_order       Int
  date_on_supply DateTime
  atm            atm      @relation(fields: [id_atm], references: [id_system], map: "Supply_id_atm_fkey")
  order          order    @relation(fields: [id_order], references: [id], map: "Supply_id_order_fkey")
  treasury       treasury @relation(fields: [id_treasury], references: [id_system], map: "Supply_id_treasury_fkey")

  @@index([id_atm], map: "Supply_id_atm_fkey")
  @@index([id_order], map: "Supply_id_order_fkey")
  @@index([id_treasury], map: "Supply_id_treasury_fkey")
}

model treasury {
  id                                                 Int                @id @default(autoincrement())
  id_system                                          Int                @unique(map: "Treasury_id_system_key")
  name                                               String             @unique(map: "Treasury_name_key")
  short_name                                         String             @unique(map: "Treasury_short_name_key")
  account_number                                     String             @unique(map: "Treasury_account_number_key")
  gmcore_number                                      String
  region                                             Int
  bills_10                                           Int                @default(0)
  bills_20                                           Int                @default(0)
  bills_50                                           Int                @default(0)
  bills_100                                          Int                @default(0)
  status                                             Boolean            @default(true)
  id_type_supply                                     Int
  enabled_gmcore                                     Boolean            @default(true)
  id_type_store                                      Int
  createdAt                                          DateTime           @default(now())
  updatedAt                                          DateTime           @default(now())
  name_for_email                                     String             @default("")
  account_number_for_transfer                        String             @default("")
  atm                                                atm[]
  contact                                            contact[]
  moneysplit_moneysplit_id_treasury_originTotreasury moneySplit[]       @relation("moneysplit_id_treasury_originTotreasury")
  moneysplit_moneysplit_id_treasury_ratingTotreasury moneySplit[]       @relation("moneysplit_id_treasury_ratingTotreasury")
  moneysplitrefund                                   moneySplitRefund[]
  operationalerror                                   operationalError[]
  operatorcard                                       operatorCard[]
  order_order_id_treasury_destinTotreasury           order[]            @relation("order_id_treasury_destinTotreasury")
  order_order_id_treasury_originTotreasury           order[]            @relation("order_id_treasury_originTotreasury")
  supply                                             supply[]
  typestore                                          typeStore          @relation(fields: [id_type_store], references: [id], map: "Treasury_id_type_store_fkey")
  typesupply                                         typeSupply         @relation(fields: [id_type_supply], references: [id], map: "Treasury_id_type_supply_fkey")

  @@index([id_type_store], map: "Treasury_id_type_store_fkey")
  @@index([id_type_supply], map: "Treasury_id_type_supply_fkey")
}

model typeOperation {
  id        Int      @id @default(autoincrement())
  id_system Int
  name      String   @unique(map: "TypeOperation_name_key")
  status    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  order     order[]
}

model typeOrder {
  id        Int      @id @default(autoincrement())
  id_system Int
  name      String   @unique(map: "TypeOrder_name_key")
  status    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  order     order[]
}

model typeStore {
  id        Int        @id @default(autoincrement())
  name      String     @unique(map: "typeStore_name_key")
  status    Boolean    @default(true)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now())
  treasury  treasury[]
}

model typeSupply {
  id        Int        @id @default(autoincrement())
  name      String     @unique(map: "TypeSupply_name_key")
  status    Boolean    @default(true)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now())
  treasury  treasury[]
}

model user {
  id        Int      @id @default(autoincrement())
  name      String
  slug      String   @unique(map: "User_slug_key")
  email     String   @unique(map: "User_email_key")
  password  String
  status    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}
