// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  name String
  slug  String @unique
  email String @unique
  password  String
  status Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())

}

model Treasury {
  id Int @id @default(autoincrement())
  id_system Int @unique
  id_type_supply Int
  id_type_store Int
  name String @unique
  name_for_email String @default("")
  short_name String @unique
  account_number String @unique
  gmcore_number String
  enabled_gmcore Boolean @default(true)
  region Int
  bills_10 Int @default(0)
  bills_20 Int @default(0)
  bills_50 Int @default(0)
  bills_100 Int @default(0)
  status Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())


  typeSupply TypeSupply @relation(fields: [id_type_supply], references: [id])
  typeStore typeStore @relation(fields: [id_type_store], references: [id])

  atms Atm[]
  contacts Contact[]
  operatorCards OperatorCard[]
  OrdersOrigin Order[] @relation("TreasuryOrigin")
  OrdersDestin Order[] @relation("TreasuryDestin")
}

model Order {
  id Int @id @default(autoincrement())
  id_type_operation Int
  id_treasury_origin Int
  id_treasury_destin Int
  date_order DateTime
  id_type_order Int
  requested_value_A Int
  requested_value_B Int
  requested_value_C Int
  requested_value_D Int
  composition_change Boolean @default(false)
  confirmed_value_A Int @default(0)
  confirmed_value_B Int @default(0)
  confirmed_value_C Int @default(0)
  confirmed_value_D Int @default(0)
  observation String @default("")
  status_order Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())


  typeOperation TypeOperation @relation(fields: [id_type_operation], references: [id])
  treasuryOrigin Treasury @relation("TreasuryOrigin", fields: [id_treasury_origin], references: [id])
  treasuryDestin Treasury @relation("TreasuryDestin", fields: [id_treasury_destin], references: [id])
  typeOrder TypeOrder @relation(fields: [id_type_order], references: [id])
  statusOrder StatusOrder @relation(fields: [status_order], references: [id])
}

model Supply {
  id Int @id @default(autoincrement())
  id_atm Int
  cassete_A Int
  cassete_B Int
  cassete_C Int
  cassete_D Int
  date DateTime @default(now())
  total_exchange Boolean @default(false)
  status Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())


  atm Atm @relation(fields: [id_atm], references: [id_system])
}

model StatusOrder {
  id Int @id @default(autoincrement())
  name String @unique
  status Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())


  orders Order[]
}

model typeStore {
  id Int @id @default(autoincrement())
  name String @unique
  status Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())


 treasury Treasury[]
}

model Atm {
  id Int @id @default(autoincrement())
  id_system Int @unique
  name String @unique
  short_name String @unique
  id_treasury Int
  number_store Int
  cassete_A Int
  cassete_B Int
  cassete_C Int
  cassete_D Int
  status Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())


  treasury Treasury @relation(fields: [id_treasury], references: [id])
  supplies Supply[]
}

model TypeOperation {
  id Int @id @default(autoincrement())
  id_system Int
  name String @unique
  status Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())


  orders Order[]
}

model TypeOrder {
  id Int @id @default(autoincrement())
  id_system Int
  name String @unique
  status Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())


  orders Order[]
}

model TypeSupply {
  id Int @id @default(autoincrement())
  name String @unique
  status Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())


  treasuries Treasury[]
}

model Contact {
  id Int @id @default(autoincrement())
  id_treasury Int
  name String
  email String 
  phone String
  status Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())


  treasury Treasury @relation(fields: [id_treasury], references: [id])
}

model OperatorCard {
  id Int @id @default(autoincrement())
  id_treasury Int
  name String @unique
  number_card String @unique
  inUse Boolean @default(false)
  status Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())


  treasury Treasury @relation(fields: [id_treasury], references: [id])
}
